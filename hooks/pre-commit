#!/bin/sh
# this hook is in SCM so that it can be shared
# to install it, create a symbolic link in the projects .git/hooks folder
#
#       i.e. - from the .git/hooks directory, run
#               $ ln -s ../../git-hooks/pre-commit pre-commit
#
# to skip the tests, run with the --no-verify argument
#       i.e. - $ 'git commit --no-verify'

# Default RESULT to a success.
RESULT=0

# check that the format matches the google-java-format
# Credit to this plugin goes to github user sherter:
# https://github.com/sherter/google-java-format-gradle-plugin

echo "Verifying commit matches expected format."

./gradlew verifyGJF

# if code is formatted correctly, run the tests.
if [$? -eq 0]; then
	# stash any unstaged changes
	git stash -q --keep-index

	# run the tests with the gradle wrapper
	./gradlew test --daemon

	# store the last exit code in a variable
	RESULT=$?

	# unstash the unstashed changes
	git stash pop -q

else
	echo "Code is not formatted correctly."
	echo "use an IDE formatter for google-java-format or run"
	echo "./gradlew goJF"

fi

if [$RESULT -ne 0]; then

	echo "There are failing tests. Please fix them before committing."

fi

# return the './gradlew test' exit code
exit $RESULT
